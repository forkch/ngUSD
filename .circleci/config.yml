version: 2
jobs:
  build:
    docker:
      # See https://circleci.com/docs/2.0/circleci-images/ ...
      - image: circleci/openjdk:8-jdk-browsers
      - image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
        environment:
          cluster.name: elasticsearch
          xpack.ml.enabled: false
          xpack.security.enabled: false
          ES_JAVA_OPTS: -Xms512m -Xmx512m
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Configure Environment for Job
          command: echo -e "export BRANCH=`echo $CIRCLE_BRANCH | sed 's/\//\-/' | sed 's/\#/\-/'`" >> $BASH_ENV
      - run:
          name: Clean & install
          command: |
            mkdir -p test-results
            ./gradlew clean build -x test --no-daemon -s
      - run:
          name: Unit tests
          command: ./gradlew test -x scenarioo-client:npm_test --continue --no-daemon -s
      - run:
          name: JS tests
          command: ./gradlew scenarioo-client:npm_test --no-daemon -s
          when: always
      - run:
          name: JS/TS lint
          command: ./gradlew scenarioo-client:runLinter --no-daemon -s
          when: always
      - run:
          name: Archive generated example scenarioo docu data of Wikipedia
          command: |
            pushd scenarioo-docu-generation-example/build/scenarioDocuExample
            zip -r ../../../exampleScenariooDocu.zip ./*
            popd
      - run:
          name: WARNING - currently NO E2E tests for master!
          command: |
            echo "Master branch currently does not run e2e tests"
      - run:
          name: Collect test results
          command: |
            mkdir -p test-results/javascript
            cp -pR scenarioo-client/TESTS* test-results/javascript || true
            cp -pR scenarioo-server/build/test-results/test test-results/server || true
            cp -pR scenarioo-validator/build/test-results/test test-results/validator || true
            cp -pR scenarioo-docu-generation-example/build/test-results/test test-results/docu || true
          when: always
      - run:
          name: WARNING - currently NO scenarioo self-docu e2e test reports to http://demo.scenarioo.org/scenarioo-develop
          command: |
            mkdir -p dist
            pushd scenarioo-docu-generation-example/build/scenarioDocuExample
            zip -r ../../../e2eScenariooDocu.zip ./*
            popd
            echo -e "scenarioo self-docu e2e test reports:\nNOT AVAILABLE FOR master branch currently - NO e2e tests have been run for this distribution!\n" >> ./dist/build-result-summary.txt
            echo "e2eSceanriooDocu.zip was faked with dummy data and is not published further"
      - run:
          name: Checksum artifacts and move to dist folder for deploy job
          command: |
            mv e2eScenariooDocu.zip dist
            mv exampleScenariooDocu.zip dist
            mv scenarioo-server/build/libs/scenarioo-latest.war dist/scenarioo.war
            sha256sum dist/e2eScenariooDocu.zip | awk '{ print $1 }' > dist/e2eScenariooDocu.zip.sha256
            sha256sum dist/exampleScenariooDocu.zip | awk '{ print $1 }' > dist/exampleScenariooDocu.zip.sha256
            sha256sum dist/scenarioo.war | awk '{ print $1 }' > dist/scenarioo.war.sha256
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: /test-results
      - store_artifacts:
          path: dist
          destination: /
      # Unfortunately each workflow job has it's own build number. Therefore we need to persist this jobs number
      # here to use it during the deploy for getting the artifacts
      - run:
          name: Persist value of $CIRCLE_BUILD_NUM for deploy job
          command: echo "$CIRCLE_BUILD_NUM" >> BUILD_NUM
      - persist_to_workspace:
          root: .
          paths:
            - BUILD_NUM
      - run:
          name: Build Result Summary
          command: |
            echo "Build Result Summary: \n"
            cat ./dist/build-result-summary.txt

  deploy:
    docker:
      # See https://circleci.com/docs/2.0/circleci-images/ ...
      - image: circleci/node:8-stretch
    working_directory: ~/infra
    steps:
      # Add keys with write access to scenarioo-infrastructure:
      #  Add private key on Circle CI: https://circleci.com/gh/scenarioo/scenarioo/edit#ssh
      #  And public key on Github: https://github.com/scenarioo/scenarioo-infrastructure/settings/keys
      - add_ssh_keys:
            fingerprints:
              - "6c:90:aa:bc:f6:16:a2:10:0c:95:80:7a:b7:b7:3c:0f"
      - run:
          name: Checkout scenarioo-infrastructure
          command: |
            mkdir -p ~/.ssh
            sudo chmod 700 ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git clone -q git@github.com:scenarioo/scenarioo-infrastructure.git .
      - attach_workspace: &attach_workspace
          at: .
      - run:
          name: Deploy demo of branch
          command: |
            ./infra.sh deployDemo "$CIRCLE_BRANCH" "$(cat BUILD_NUM)" "$CIRCLE_USERNAME" "$CIRCLE_PULL_REQUEST" && rm BUILD_NUM
      - run:
          name: Commit and push
          command: |
            git config --global user.email "admin@scenarioo.org"
            git config --global user.name "scenarioo-ci"
            git add demos overviewpage
            git diff
            git commit -m "Deploy demo for $CIRCLE_BRANCH  - Build: $CIRCLE_BUILD_URL triggered by $CIRCLE_USERNAME"
            git push

  publish_docs:
    docker:
      - image: circleci/node:8-stretch
    working_directory: ~/gitbook
    steps:
      # Add keys with write access to scenarioo.github.io:
      #  Add private key on Circle CI: https://circleci.com/gh/scenarioo/scenarioo/edit#ssh
      #  And public key on Github: https://github.com/scenarioo/scenarioo.github.io/settings/keys
      - add_ssh_keys:
            fingerprints:
              - "82:b8:ea:d9:58:04:7d:09:fd:95:15:de:bc:1b:7c:b7"
      - run:
          name: Configure git && github ssh connection for docs deployment
          command: |
            mkdir -p ~/.ssh
            sudo chmod 700 ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git config --global user.email "admin@scenarioo.org"
            git config --global user.name "scenarioo-ci"
      - checkout
      - run:
          name: Install dependencies
          command: cd docs && npm install
      - run:
          name: Generate docu
          command: cd docs && npm run build
      - run:
          name: Publishing Docs to http://www.scenarioo.org/docs
          command: |            
            export DOCU_VERSION=`echo $CIRCLE_BRANCH | sed 's/release\///'`
            echo "Publish docs for $DOCU_VERSION"
            cd docs
            npm run gh-pages -- --dist _book --repo git@github.com:scenarioo/scenarioo.github.io.git --branch master --dest docs/$DOCU_VERSION --message "Publish docs for $DOCU_VERSION"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              ignore:
                - /--nodemo/
                - /--no-demo/
      - publish_docs:
          filters:
            branches:
              only:
                - master
                - develop
                - /^release\/.*/
