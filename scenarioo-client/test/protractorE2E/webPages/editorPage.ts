'use strict';
import {by, element, ElementFinder} from "protractor";

var util = require('util');

export default class EditorPage {

    private path: string = "/";
    private saveButton: ElementFinder = element(by.id('save'));
    private saveSketchSuccessfulMessage: ElementFinder = element(by.id('saveSketchSuccessfulMessage'));
    private issueNameTextField: ElementFinder = element(by.id('issueName'));
    private issueAuthorTextField: ElementFinder = element(by.id('issueAuthor'));
    private issueDescriptionTextField: ElementFinder = element(by.id('issueDescription'));

    async enterSketchInformation(sketchName, author) {
        this.issueNameTextField.clear();
        this.issueNameTextField.sendKeys(sketchName);
        this.issueAuthorTextField.clear();
        this.issueAuthorTextField.sendKeys(author);
        this.issueDescriptionTextField.clear();
        this.issueDescriptionTextField.sendKeys('this issue was generated by e2e tests');
    };

    async clickSaveButton() {
        this.saveButton.click();
    };

    async assertSaveButtonIsDisabled() {
        expect(this.saveButton.isEnabled()).toBe(false);
    };

    async assertPageIsDisplayed() {
        expect(this.saveButton.isDisplayed()).toBe(true);
    };

    async assertAuthorFieldIsEmpty() {
        expect(this.issueAuthorTextField.getText()).toBe('');
    };

    async assertAuthorFieldIsSetTo(expectedAuthor) {
        expect(this.issueAuthorTextField.getAttribute('value')).toBe(expectedAuthor);
    };

    async assertSaveSketchSuccessfulMessageIsNotPresent() {
        expect(this.saveSketchSuccessfulMessage.isPresent()).toBe(false);
    };

    async assertSaveSketchSuccessfulMessageIsDisplayed() {
        expect(this.saveSketchSuccessfulMessage.isDisplayed()).toBe(true);
    };

}
