/**
 * Used Version of Scenarioo Java Library for reading scenarioo docu data
 */
ext.scenariooApiVersion = '2.1.1'

/**
 * Internal scenarioo format version of produced aggregation data (internal server format version).
 *
 * On import this version is stored for each build, if the format of a build does not correspond to this format, the
 * build is automatically reimported again (all aggregation data recalculated in new format).
 *
 * First part of the version corresponds to library version that is supported, second part of the version depends on
 * internal aggregation format. the second part should be increased whenever something important is changed in the
 * internal format or the way that the aggregator is caluclating internal data on builds.
 */
ext.scenariooAggregatedDataFormatVersion = '2.1.0'

/**
 * Name of the release branch of this scenarioo version, which is used for links to the versioned documentation.
 */
ext.scenariooReleaseBranch = 'release-3.0'

/*
 * Gets the version name from the latest Git tag
 * From: http://ryanharter.com/blog/2013/07/30/automatic-versioning-with-git-and-gradle/
 */
def getVersionName = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'describe', '--tags'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

ext.versionWithGitCommit = getVersionName();

allprojects {
	apply plugin: 'eclipse'

	group = 'org.scenarioo'
    version = getVersionName()

    task wrapper(type: Wrapper) {
        gradleVersion = '3.1'
    }
}
